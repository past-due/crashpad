name: Build

on:
  push:
    branches:
      - getsentry
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu
            platform: ubuntu-latest
          - name: Windows (x64)
            platform: windows-latest
          - name: Windows (arm64)
            platform: windows-latest
            CMAKE_DEFINES: -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/win_arm64.cmake -A arm64
          - name: macOS
            platform: macos-latest
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.platform }}
    env:
      CMAKE_DEFINES: ${{ matrix.CMAKE_DEFINES }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Installing Linux Dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt update
          sudo apt install zlib1g-dev libcurl4-openssl-dev libssl-dev libunwind-dev pkg-config

      - name: Build crashpad
        shell: bash
        run: |
          echo "CMAKE_DEFINES=${CMAKE_DEFINES}"
          cmake -B cmake-build -D CRASHPAD_BUILD_TOOLS=On ${CMAKE_DEFINES}
          cmake --build cmake-build --parallel

      - name: Build crashpad with client-side stack traces
        shell: bash
        run: |
          echo "CMAKE_DEFINES=${CMAKE_DEFINES}"
          cmake -B cmake-build-stacks -D CRASHPAD_ENABLE_STACKTRACE=ON ${CMAKE_DEFINES}
          cmake --build cmake-build-stacks --parallel

  build-ios:
    name: 'iOS'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - run: |
          cmake -B crashpad-xcode -GXcode -DCMAKE_SYSTEM_NAME=iOS
          xcodebuild build -project crashpad-xcode/crashpad.xcodeproj
